{
  "version": 1.1,
  "properties": [],
  "atDirectives": [
    {
      "name": "@tailwind",
      "description": "Use the `@tailwind` directive to insert Tailwind’s `base`, `components`, `utilities` and `screens` styles into your CSS.",
      "references": [
        {
          "name": "@tailwind",
          "url": "https://tailwindcss.com/docs/functions-and-directives#tailwind"
        }
      ]
    },
    {
      "name": "@apply",
      "description": "Use `@apply` to inline any existing utility classes into your own custom CSS.",
      "references": [
        {
          "name": "@apply",
          "url": "https://tailwindcss.com/docs/functions-and-directives#apply"
        }
      ]
    },
    {
      "name": "@layer",
      "description": "Use the `@layer` directive to tell Tailwind which “bucket” a set of custom styles belong to. Valid layers are a `base`, `components`, and `utilities`.",
      "references": [
        {
          "name": "@layer",
          "url": "https://tailwindcss.com/docs/functions-and-directives#layer"
        }
      ]
    },
    {
      "name": "@variants",
      "description": "You can generate `responsive`, `hover`, `focus`, `active`, and other variants of your own utilities by wrapping their definitions in the `@variants` directive.",
      "references": [
        {
          "name": "@variants",
          "url": "https://tailwindcss.com/docs/functions-and-directives#variants"
        },
        {
          "name": "Hover, Focus, & Other States",
          "url": "https://tailwindcss.com/docs/hover-focus-and-other-states"
        }
      ]
    },
    {
      "name": "@responsive",
      "description": "You can generate responsive variants of your own classes by wrapping their definitions in the `@responsive` directive.",
      "references": [
        {
          "name": "@responsive",
          "url": "https://tailwindcss.com/docs/functions-and-directives#responsive"
        }
      ]
    },
    {
      "name": "@screen",
      "description": "The `@screen` directive allows you to create media queries that reference your breakpoints by name instead of duplicating their values in your own CSS.",
      "references": [
        {
          "name": "@screen",
          "url": "https://tailwindcss.com/docs/functions-and-directives#screen"
        }
      ]
    }
  ],
  "pseudoClasses": [],
  "pseudoElements": []
}
